name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build the IPK
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Docker Build
        run: |
          mkdir bin
          cp -rf ./wrtbwmon ./bin/
          docker pull openwrtorg/sdk:x86-64-19.07-SNAPSHOT
          docker run --rm --name=test -u root -v "$(pwd)"/bin/:/home/build/openwrt/bin --privileged=true -d openwrtorg/sdk:x86-64-19.07-SNAPSHOT sleep 1d
          docker exec -i test mv ./bin/wrtbwmon ./package/
          docker exec -i test make defconfig
          docker exec -i test make package/wrtbwmon/compile V=s -j$(nproc) | tee >./bin/build.log
          docker stop test
      - name: Pack Files
        run: |
          cd bin && tar -cJvf ../build.log.tar.xz build.log && cd ..
          mkdir release
          cp -f ./bin/packages/x86_64/base/wrtbwmon* ./release/
          echo "::set-env name=app_path::$(ls ./release/wrtbwmon*)"
      - name: Upload app
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: ${{ env.app_path }}
      - name: Upload Log
        uses: actions/upload-artifact@v1
        with:
          name: buildlog
          path: ./build.log.tar.xz

  Release:
    name: Release the Binary Files
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Download App Artifact
        uses: actions/download-artifact@v1
        with:
          name: app
      - name: Set app Env
        run: |
          echo "::set-env name=app_path::$(ls ./app/*.ipk)"
          echo "::set-env name=app_name::$(basename `ls ./app/*.ipk`)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          target_commitish: master
          body: |
              Changes in this Release
              - Just publish the previous version.
          draft: true
          prerelease: true
      - name: Upload App Release
        id:  upload-app-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.app_path }}
          asset_name: ${{ env.app_name }}
          asset_content_type: application/gzip
